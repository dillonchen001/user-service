// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AuthProvidersColumns holds the columns for the "auth_providers" table.
	AuthProvidersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "provider_type", Type: field.TypeString, Size: 20},
		{Name: "provider_id", Type: field.TypeString, Size: 100},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt64},
	}
	// AuthProvidersTable holds the schema information for the "auth_providers" table.
	AuthProvidersTable = &schema.Table{
		Name:       "auth_providers",
		Columns:    AuthProvidersColumns,
		PrimaryKey: []*schema.Column{AuthProvidersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "auth_providers_users_auth_providers",
				Columns:    []*schema.Column{AuthProvidersColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64, Unique: true},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "phone", Type: field.TypeString, Unique: true, Size: 20},
		{Name: "avatar", Type: field.TypeString, Size: 255},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AuthProvidersTable,
		UsersTable,
	}
)

func init() {
	AuthProvidersTable.ForeignKeys[0].RefTable = UsersTable
}
