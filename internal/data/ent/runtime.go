// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"
	"user-service/internal/data/ent/authprovider"
	"user-service/internal/data/ent/schema"
	"user-service/internal/data/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	authproviderFields := schema.AuthProvider{}.Fields()
	_ = authproviderFields
	// authproviderDescUID is the schema descriptor for uid field.
	authproviderDescUID := authproviderFields[1].Descriptor()
	// authprovider.UIDValidator is a validator for the "uid" field. It is called by the builders before save.
	authprovider.UIDValidator = authproviderDescUID.Validators[0].(func(int64) error)
	// authproviderDescProviderType is the schema descriptor for provider_type field.
	authproviderDescProviderType := authproviderFields[2].Descriptor()
	// authprovider.ProviderTypeValidator is a validator for the "provider_type" field. It is called by the builders before save.
	authprovider.ProviderTypeValidator = authproviderDescProviderType.Validators[0].(func(string) error)
	// authproviderDescProviderID is the schema descriptor for provider_id field.
	authproviderDescProviderID := authproviderFields[3].Descriptor()
	// authprovider.ProviderIDValidator is a validator for the "provider_id" field. It is called by the builders before save.
	authprovider.ProviderIDValidator = authproviderDescProviderID.Validators[0].(func(string) error)
	// authproviderDescCreatedAt is the schema descriptor for created_at field.
	authproviderDescCreatedAt := authproviderFields[4].Descriptor()
	// authprovider.DefaultCreatedAt holds the default value on creation for the created_at field.
	authprovider.DefaultCreatedAt = authproviderDescCreatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUserID is the schema descriptor for user_id field.
	userDescUserID := userFields[1].Descriptor()
	// user.UserIDValidator is a validator for the "user_id" field. It is called by the builders before save.
	user.UserIDValidator = userDescUserID.Validators[0].(func(int64) error)
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[2].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[3].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPhone is the schema descriptor for phone field.
	userDescPhone := userFields[4].Descriptor()
	// user.PhoneValidator is a validator for the "phone" field. It is called by the builders before save.
	user.PhoneValidator = userDescPhone.Validators[0].(func(string) error)
	// userDescAvatar is the schema descriptor for avatar field.
	userDescAvatar := userFields[5].Descriptor()
	// user.AvatarValidator is a validator for the "avatar" field. It is called by the builders before save.
	user.AvatarValidator = userDescAvatar.Validators[0].(func(string) error)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[6].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[7].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
}
